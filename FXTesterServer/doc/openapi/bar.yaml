openapi: "3.0.0"
info:
  version: 1.0.0
  title: BarService
  license:
    name: MIT
servers:
  - url: http://bar.swagger.io/v1
components:
  securitySchemes:
    cookieAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: access_token
  schemas:
    SAMLForm:
      type: string
      example: |
        example: |
          <!DOCTYPE html>
          <html>
            <body>
              <form method="POST" id="SAMLRequestForm">
                <input name="SAMLRequest" ・・・>
              </form>
              <script>document.getElementById("SAMLRequestForm").submit()</script>
            </body>
          </html>
    SAMLRequest:
      type: object
      properties:
        SAMLReqeust:
          type: string
          example: "PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6d・・・"
        RelayState:
          type: string
          example: "xxx"
    SAMLResponse:
      type: object
      properties:
        SAMLResponse:
          type: string
          example: "PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6d・・・"
        RelayState:
          type: string
          example: "xxx"
    Error:
      type: object
      properties:
        code:
          type: integer
          format: uint32
          description: サーバー内部で使用しているエラーコード
          example: "0x800001"
        message:
          type: string
          description: エラーメッセージ (多言語化対象)
          example: |
            インターナルエラーが発生しました。
            (エラーコード: 0x800001)
      required:
        - code
        - message
    ErrorWithTime:
      type: object
      properties:
        err:
          $ref: "#/components/schemas/Error"
        time:
          type: string
          example: "2024-08-14T11:19:12+09:00"
      required:
        - err
        - time
    CreateFeaturePointsRequest:
      type: object
      properties:
        fileType:
          type: string
          enum: [MT4_CSV]
          description: ファイルタイプ
        fileName:
          type: string
          format: binary
          description: ファイルのテキストまたはバイナリデータ
    CreateFeaturePointsResult:
      type: object
      properties:
        uuid:
          type: string
          description: 進捗率を受け取るためのUUID
      required:
        - uuid
    UploadProgressResult:
      type: object
      properties:
        rate:
          type: number
          format: float
          description: 進捗率(進捗に応じて0.0から1.0に増加する)
        isCompleted:
          type: boolean
          description: アップロードが完了したかのフラグ値
      required:
        - rate
        - isCompleted

security: # 全てのエンドポイントに対してbearerの指定を要求する
  - bearerAuth: []

paths:
  /saml/login:
    get:
      tags:
        - Auth API
      summary: ユーザをシングルサインオンさせるログインリクエストを作成し、FormのPOSTによってidPに送信するスクリプトタグを含んだHTMLを返却するエンドポイント。
      security: []
      parameters:
        - name: X-Redirect-URL
          in: header
          required: true
          description: シングルサインオン完了時にリダイレクトさせたいURLを指定する
          schema:
            type: string
            example: "https://xxxxx/"
        - name: X-Redirect-URL-On-Error
          in: header
          required: true
          description: シングルサインオンエラー時にリダイレクトさせたいURLを指定する
          schema:
            type: string
            example: "https://xxxxx/"
      responses:
        '200':
          description: 正常終了
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sso_token=xxxx; Path=/saml/acs; HttpOnly
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/SAMLForm"
        default:
          description: シングルサインオンが許可されなかった場合
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /saml/acs:
    post:
      tags:
        - Auth API
      summary: IdPから受け取る認証レスポンス（SAMLアサーション）を処理するエンドポイント。
      security: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SAMLResponse"
      responses:
        '302':
          description: |
             正常終了<br>
             (エラーが発生した場合はHttpヘッダのLocationに格納されれているURLにURLパラメータ(saml_error=1)が付与される)
          headers:
            Set-Cookie:
              schema:
                type: string
                example: access_token=xxxx; Path=/; HttpOnly, refresh_token=xxxx; Path=/TODO; HttpOnly, saml_error_token=xxxx; Path=/saml/error; HttpOnly
            Location:
              schema:
                type: string
                example: "https://xxxxx/login?saml_error=1"
              description: リダイレクト先のURL
  /saml/logout:
    get:
      tags:
        - Auth API
      summary: ユーザをログアウトさせるログアウトリクエストを作成し、FormのPOSTによってidPに送信するスクリプトタグを含んだHTMLを返却するエンドポイント。
      security:
        - cookieAuth: []
      parameters:
        - name: X-Redirect-URL
          in: header
          required: true
          description: シングルログアウト完了時にリダイレクトさせたいURLを指定する
          schema:
            type: string
            example: "https://xxxxx/"
        - name: X-Redirect-URL-On-Error
          in: header
          required: true
          description: シングルログアウトのエラー時にリダイレクトさせたいURLを指定する
          schema:
            type: string
            example: "https://xxxxx/"
      responses:
        '200':
          description: 正常終了
          headers:
            Set-Cookie:
              schema:
                type: string
                example: slo_token=xxxx; Path=/saml/slo; HttpOnly
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/SAMLForm"
        default:
          description: シングルサインオンが許可されなかった場合
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /saml/slo:
    post:
      tags:
        - Auth API
      summary: IdPから受け取るログアウトリクエストを処理し、ユーザーをログアウトさせるエンドポイント。
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: "#/components/schemas/SAMLRequest"
                - $ref: "#/components/schemas/SAMLResponse"
      responses:
        '200':
          description: |
            他SP起点のシングルログアウトが正常終了<br>
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/SAMLForm"
        '302':
          description: |
             本SP起点のシングルログアウトが正常終了<br>
             (エラーが発生した場合はHttpヘッダのLocationに格納されれているURLにURLパラメータ(saml_error=1)が付与される)
          headers:
            Set-Cookie:
              schema:
                type: string
                example: saml_error_token=xxxx; Path=/saml/error; HttpOnly
            Location:
              schema:
                type: string
                example: "https://xxxxx/login?saml_error=1"
              description: リダイレクト先のURL
  /saml/error:
    get:
      tags:
        - Auth API
      summary: SAMLログインのエラー詳細を返却するエンドポイント
      security: []
      responses:
        '200':
          description: 正常終了
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorWithTime"
        default:
          description: 予期しないエラーが発生した場合
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /ws/:uuid:
    get:
      summary: Websocketと接続します。
      responses:
        '101':
          description: Websocketのハンドシェイクが正常に完了した場合

  /feature_points:
    post:
      summary: ローソク足のデータが格納されたファイル(MT4が出力したCSVなど)をアップロードし、特徴点の抽出を開始します。
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateFeaturePointsRequest"
      responses:
        '202':
          description: 特徴点の抽出要求が受領された場合。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFeaturePointsResult"
        '400':
          description: |
            APIパラメータの不備があった場合
            - 予期しないパラメータの指定
            - ファイルデータの不備 等
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: |
            処理続行に困難な問題が発生した場合
            - サーバー負荷増大により処理を受け取れない
            - バックエンドのシステムに致命的な確認された 等
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-websocket-messages:
        send:
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    enum: [progress]
                    description: リクエストのアクションタイプ
                  payload:
                    type: string
                    description: 現在は使用用途無し
        recv:
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    enum: [progress]
                    description: リクエストアクションに対しての応答アクション
                  payload:
                    type: object
                    content:
                      application/json:
                        schema:
                          - $ref: "#/components/schemas/UploadProgressResult"